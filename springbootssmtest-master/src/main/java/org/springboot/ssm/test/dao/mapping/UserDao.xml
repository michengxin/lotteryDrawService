<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.springboot.ssm.test.dao.UserDao">

    <resultMap id="AllColumnMap" type="org.springboot.ssm.test.entity.User">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="work_num" property="workNum"/>
        <result column="telphone" property="telphone"/>
        <result column="eight_type" property="eightType"/>
        <result column="game_flag" property="gameFlag"/>
        <result column="lottery_draw_flag" property="lotteryDrawFlag"/>
        <result column="login_flag" property="loginFlag"/>
        <result column="first_draw_flag" property="firstDrawFlag"/>
        <result column="two_draw_flag" property="twoDrawFlag"/>
        <result column="three_draw_flag" property="threeDrawFlag"/>
        <result column="four_draw_flag" property="fourDrawFlag"/>
    </resultMap>

    <select id="selectUserByWorkNum" resultMap="AllColumnMap" parameterType="string">
          SELECT * FROM  user WHERE work_num = #{workNum}
    </select>

    <select id="selectCountByWorkNum" resultType="int" parameterType="string">
          SELECT COUNT(1) FROM  user WHERE work_num = #{workNum}
    </select>

    <select id="checkWorkNumAndTelphone" resultType="int" parameterType="string">
          SELECT COUNT(1) FROM  user WHERE work_num = #{workNum} AND telphone = #{telphone}
    </select>

    <select id="checkLoginFlagByWorkNum" resultType="int" parameterType="string">
          SELECT login_flag FROM  user WHERE work_num = #{workNum}
    </select>

    <select id="checkLotteryDrawFlagByWorkNum" resultType="int" parameterType="string">
          SELECT lottery_draw_flag FROM  user WHERE work_num = #{workNum}
    </select>

    <update id="updateLoginFlagByWorkNum" parameterType="string">
        UPDATE user SET login_flag = 1 WHERE work_num = #{workNum}
    </update>

    <update id="updateLotteryDrawFlagByWorkNum" parameterType="string">
        UPDATE user SET lottery_draw_flag = 1 WHERE work_num = #{workNum}
    </update>

    <select id="distributionOfFirstPrize" resultType="string">
       SELECT work_num FROM user
       WHERE login_flag =1 AND  lottery_draw_flag =1 AND two_draw_flag =0 AND three_draw_flag = 0
       AND four_draw_flag = 0 ORDER BY RAND() limit 1
    </select>

    <update id="updateFirstDrawFlag" parameterType="string">
       UPDATE user SET first_draw_flag = 1 WHERE work_num = #{workNum}
    </update>

    <select id="distributionOfTwoPrize" resultType="string">
       SELECT work_num FROM user
       WHERE login_flag =1 AND  lottery_draw_flag =1 AND first_draw_flag =0 AND three_draw_flag = 0
       AND four_draw_flag = 0 ORDER BY RAND() limit 5
    </select>

    <update id="updateTwoDrawFlag" parameterType="java.util.List">
       UPDATE user SET two_draw_flag = 1 WHERE work_num
        IN
        <foreach collection="list" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="distributionOfThreePrize" resultType="string">
       SELECT work_num FROM user
       WHERE login_flag =1 AND  lottery_draw_flag =1 AND first_draw_flag =0 AND two_draw_flag = 0
       AND four_draw_flag = 0 ORDER BY RAND() limit 10
    </select>

    <update id="updateThreeDrawFlag" parameterType="java.util.List">
        UPDATE user SET three_draw_flag = 1 WHERE work_num
        IN
        <foreach collection="list" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="distributionOfFourPrize" resultType="string">
       SELECT work_num FROM user
       WHERE login_flag =1 AND  lottery_draw_flag =1 AND first_draw_flag =0 AND two_draw_flag = 0
       AND three_draw_flag = 0 ORDER BY RAND() limit 10
    </select>

    <update id="updateFourDrawFlag" parameterType="java.util.List">
        UPDATE user SET four_draw_flag = 1 WHERE work_num
        IN
        <foreach collection="list" item="item" close=")" open="(" separator=",">
            #{item}
        </foreach>
    </update>

    <insert id="importProjectList" parameterType="java.util.List">
        insert into user
        (id,work_num,telphone,name)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.work_num},#{item.telphone},#{item.name})
        </foreach>
    </insert>
</mapper>
