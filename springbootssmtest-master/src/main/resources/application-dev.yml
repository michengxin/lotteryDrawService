spring:
  profiles:
    include: bhome

##logging     开发
logging:
  file:  # 日志文件,绝对路径或相对路径
  path: log  # 保存日志文件目录路径
  config: # 日志配置文件,Spring Boot默认使用classpath路径下的日志配置文件,如:logback.xml
  level:  # 日志级别
    root: info
    org.springframework.web: info # 配置spring web日志级别
    com.ibatis: info
---
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/myproject?characterEncoding=utf8&useSSL=false&useUnicode=true&allowMultiQueries=true&serverTimezone=GMT%2B8
    username: root
    password: 123456
    # 使用hikari数据源
    type: com.zaxxer.hikari.HikariDataSource
    minimum-idle: 5
    maximum-pool-size: 15
    auto-commit: true
    idle-timeout: 30000
    pool-name: PCMakerHikariCP
    max-lifetime: 1800000
    connection-timeout: 30000
    connection-test-query: SELECT 1
---
spring:
  activemq:
    # failover:(tcp://localhost:61616,tcp://localhost:61617)
    # tcp://localhost:61616
    broker-url: tcp://localhost:61616
    #true 表示使用内置的MQ，false则连接服务器
    in-memory: false
    #true表示使用连接池；false时，每发送一条数据创建一个连接
    enabled: true
    #连接池最大连接数
    max-connections: 10
    #空闲的连接过期时间，默认为30秒
    idle-timeout: 30000
    #强制的连接过期时间，与idleTimeout的区别在于：idleTimeout是在连接空闲一段时间失效，而expiryTimeout不管当前连接的情况，只要达到指定时间就失效。默认为0，never
    expiry-timeout: 0


---
spring:
  redis:
    database: 1
    host: 127.0.0.1
    port: 6379  #端口
    password:   #服务器连接密码（默认为空）
    timeout: 30000  #连接超时时间（毫秒）
    jedis:
      pool:
        max-idle: 8 #连接池中的最小空闲连接
        min-idle: 0 #连接池中的最小空闲连接
        max-active: 8  #连接池最大连接数（使用负值表示没有限制）
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）

#mybatis
mybatis-plus:
  mapper-locations: classpath:org/springboot/dao/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: org.springboot.entity
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: INPUT
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      #      field-strategy: 0
      #驼峰下划线转换
      column-format: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: MYSQL
    refresh: true
      #自定义填充策略接口实现
      #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



#pagehelper分页插件
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql
---
spring:
  freemarker:
    enabled: true #是否启用freemarker
    template-loader-path: classpath:/template/freeMarker/ #设定模板的加载路径，多个以逗号分隔
    suffix: .ftl #设定模板的后缀
    content-type: text/html
    check-template-location: true #是否检查模板位置是否存在
    cache: false #是否启用模板缓存
    charset: UTF-8 #模板编码
    #一些常用配置
    allow-request-override: false #是否允许HttpServletRequest属性覆盖(隐藏)控制器生成的同名模型属性
    allow-session-override: false #是否允许HttpSession属性覆盖(隐藏)控制器生成的同名模型属性
    expose-request-attributes: false #设定所有request的属性在merge到模板的时候，是否要都添加到model中
    expose-session-attributes: false #是否在merge模板的时候，将HttpSession属性都添加到model中
    expose-spring-macro-helpers: true #设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
    prefer-file-system-access: true #是否优先从文件系统加载template，以支持热加载，默认为true





